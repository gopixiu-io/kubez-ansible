---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  labels:
    k8s-app: dashboard-metrics-scraper
  name: v1beta1.metrics.pixiu.io
spec:
  group: metrics.pixiu.io
  groupPriorityMinimum: 100
  insecureSkipTLSVerify: true
  service:
    name: pixiu-metrics-scraper
    namespace: pixiu-system
    port: 443
  version: v1beta1
  versionPriority: 100
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: pixiu-metrics-scraper
  name: pixiu-metrics-scraper
  namespace: pixiu-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    k8s-app: pixiu-metrics-scraper
  name: pixiu-metrics-scraper
rules:
  - apiGroups: ["metrics.k8s.io"]
    resources: ["pods", "nodes"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pixiu-metrics-scraper
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pixiu-metrics-scraper
subjects:
  - kind: ServiceAccount
    name: pixiu-metrics-scraper
    namespace: pixiu-system

---
apiVersion: v1
data:
  default.conf: |
    server {
        listen 443 ssl;

        ssl_certificate /home/ssl/cert.pem;
        ssl_certificate_key /home/ssl/key.pem;

        location ~ ^/apis/metrics.pixiu.io/v1beta1 {
          rewrite ^/apis/metrics.pixiu.io/v1beta1/(.*)$ /$1 break;
          proxy_pass http://127.0.0.1:8000;
        }

        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
kind: ConfigMap
metadata:
  name: pixiu-scraper-config
  namespace: pixiu-system

---
kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: pixiu-metrics-scraper
  name: pixiu-metrics-scraper
  namespace: pixiu-system
spec:
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    - name: http
      port: 8000
      protocol: TCP
      targetPort: 8000
  selector:
    k8s-app: pixiu-metrics-scraper

---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: pixiu-metrics-scraper
  name: pixiu-metrics-scraper
  namespace: pixiu-system
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: pixiu-metrics-scraper
  template:
    metadata:
      labels:
        k8s-app: pixiu-metrics-scraper
    spec:
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: pixiu-metrics-proxy
          image: harbor.cloud.pixiuio.com/pixiuio/nginx:1.25-pixiu
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              name: pixiu-scraper-config
              readOnly: true
        - name: pixiu-metrics-scraper
          image: harbor.cloud.pixiuio.com/pixiuio/metrics-scraper:v1.0.8
          ports:
            - containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 8000
            initialDelaySeconds: 30
            timeoutSeconds: 30
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1001
            runAsGroup: 2001
      serviceAccountName: pixiu-metrics-scraper
      nodeSelector:
        "kubernetes.io/os": linux
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - configMap:
            defaultMode: 420
            name: pixiu-scraper-config
          name: pixiu-scraper-config
